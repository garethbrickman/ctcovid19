{"ast":null,"code":"var _jsxFileName = \"/home/jgadelugo/Documents/ctcovid19/src/Marker.js\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport './Marker.css';\n\nfunction useHover() {\n  const ref = useRef();\n  const [hovered, setHovered] = useState(false);\n\n  const enter = () => setHovered(true);\n\n  const leave = () => setHovered(false);\n\n  useEffect(() => {\n    ref.current.addEventListener('mouseenter', enter);\n    ref.current.addEventListener('mouseleave', leave);\n    return () => {\n      ref.current.removeEventListener('mouseenter', enter);\n      ref.current.removeEventListener('mouseleave', leave);\n    };\n  }, [ref]);\n  return [ref, hovered];\n}\n\nconst Marker = props => {\n  const {\n    color,\n    name,\n    confirmedCases,\n    source\n  } = props;\n  const [ref, hovered] = useHover();\n  return React.createElement(\"div\", {\n    className: \"marker\",\n    style: {\n      backgroundColor: color,\n      cursor: 'pointer'\n    },\n    title: name,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, hovered && React.createElement(\"div\", {\n    className: \"confirmedCases\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    class: \"hoverDot\",\n    style: \"  background-color: grey; color: white; border: white;\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, confirmedCases, \" Confirmed Cases \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), \" source: \", source)));\n};\n\nexport default Marker;","map":{"version":3,"sources":["/home/jgadelugo/Documents/ctcovid19/src/Marker.js"],"names":["React","useRef","useState","useEffect","useHover","ref","hovered","setHovered","enter","leave","current","addEventListener","removeEventListener","Marker","props","color","name","confirmedCases","source","backgroundColor","cursor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,cAAP;;AAEA,SAASC,QAAT,GAAoB;AAClB,QAAMC,GAAG,GAAGJ,MAAM,EAAlB;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;;AAEA,QAAMM,KAAK,GAAG,MAAMD,UAAU,CAAC,IAAD,CAA9B;;AACA,QAAME,KAAK,GAAG,MAAMF,UAAU,CAAC,KAAD,CAA9B;;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,GAAG,CAACK,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CH,KAA3C;AACAH,IAAAA,GAAG,CAACK,OAAJ,CAAYC,gBAAZ,CAA6B,YAA7B,EAA2CF,KAA3C;AACA,WAAO,MAAM;AACXJ,MAAAA,GAAG,CAACK,OAAJ,CAAYE,mBAAZ,CAAgC,YAAhC,EAA8CJ,KAA9C;AACAH,MAAAA,GAAG,CAACK,OAAJ,CAAYE,mBAAZ,CAAgC,YAAhC,EAA8CH,KAA9C;AACD,KAHD;AAID,GAPQ,EAON,CAACJ,GAAD,CAPM,CAAT;AASA,SAAO,CAACA,GAAD,EAAMC,OAAN,CAAP;AACD;;AAED,MAAMO,MAAM,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,cAAf;AAA+BC,IAAAA;AAA/B,MAAyCJ,KAA/C;AACA,QAAM,CAACT,GAAD,EAAMC,OAAN,IAAiBF,QAAQ,EAA/B;AACA,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AACE,IAAA,KAAK,EAAE;AAAEe,MAAAA,eAAe,EAAEJ,KAAnB;AAA0BK,MAAAA,MAAM,EAAE;AAAlC,KADT;AAEE,IAAA,KAAK,EAAEJ,IAFT;AAGE,IAAA,GAAG,EAAEX,GAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGC,OAAO,IAAI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgC;AAAG,IAAA,KAAK,EAAC,UAAT;AAAoB,IAAA,KAAK,EAAC,wDAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoFW,cAApF,uBAAoH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAApH,eAAmIC,MAAnI,CAAhC,CALd,CADF;AASD,CAZH;;AAcE,eAAeL,MAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport './Marker.css';\n\nfunction useHover() {\n  const ref = useRef()\n  const [hovered, setHovered] = useState(false)\n\n  const enter = () => setHovered(true)\n  const leave = () => setHovered(false)\n\n  useEffect(() => {\n    ref.current.addEventListener('mouseenter', enter)\n    ref.current.addEventListener('mouseleave', leave)\n    return () => {\n      ref.current.removeEventListener('mouseenter', enter)\n      ref.current.removeEventListener('mouseleave', leave)\n    }\n  }, [ref])\n\n  return [ref, hovered]\n}\n\nconst Marker = (props) => {\n    const { color, name, confirmedCases, source} = props;\n    const [ref, hovered] = useHover()\n    return (\n      <div className=\"marker\"\n        style={{ backgroundColor: color, cursor: 'pointer'}}\n        title={name}\n        ref={ref}\n      >\n        {hovered && <div className=\"confirmedCases\"><p class=\"hoverDot\" style=\"  background-color: grey; color: white; border: white;\">{confirmedCases} Confirmed Cases <br/> source: {source}</p></div>}\n      </div>\n    );\n  };\n\n  export default Marker;"]},"metadata":{},"sourceType":"module"}