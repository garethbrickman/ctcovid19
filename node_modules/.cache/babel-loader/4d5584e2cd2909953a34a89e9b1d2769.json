{"ast":null,"code":"var _jsxFileName = \"/home/jgadelugo/Documents/ctcovid19/src/chart.js\";\nimport React from 'react';\nimport Plot from 'instal react-plotly.js';\n\nclass Chart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: this.props.title,\n      positiveXValues: [],\n      timeYValues: []\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Plot, {\n      data: [{\n        x: this.state.positiveXValues,\n        y: this.state.timeYValues,\n        //type: 'scatter',\n        //mode: 'lines+markers',\n        marker: {\n          color: 'red'\n        }\n      }],\n      layout: {\n        title: this.state.title + '  Chart'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.timeYValues !== this.props.timeYValues) {\n      this.setState({\n        positiveXValues: this.props.positiveXValues,\n        timeYValues: this.props.timeYValues,\n        title: this.props.title\n      });\n\n      if (prevProps.title !== this.props.title) {\n        this.setState({\n          positiveXValues: this.props.positiveXValues,\n          timeYValues: this.props.timeYValues,\n          title: this.props.title\n        });\n      }\n    }\n  }\n\n}\n\nexport default Chart;","map":{"version":3,"sources":["/home/jgadelugo/Documents/ctcovid19/src/chart.js"],"names":["React","Plot","Chart","Component","constructor","props","state","title","positiveXValues","timeYValues","render","x","y","marker","color","componentDidUpdate","prevProps","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAGA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KADT;AAETC,MAAAA,eAAe,EAAE,EAFR;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AACI,MAAA,IAAI,EAAE,CACF;AACIC,QAAAA,CAAC,EAAE,KAAKL,KAAL,CAAWE,eADlB;AAEII,QAAAA,CAAC,EAAE,KAAKN,KAAL,CAAWG,WAFlB;AAGI;AACA;AACAI,QAAAA,MAAM,EAAE;AAACC,UAAAA,KAAK,EAAE;AAAR;AALZ,OADE,CADV;AAUI,MAAA,MAAM,EAAE;AAACP,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;AAA3B,OAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAgBH;;AACDQ,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAIA,SAAS,CAACP,WAAV,KAA0B,KAAKJ,KAAL,CAAWI,WAAzC,EAAsD;AAClD,WAAKQ,QAAL,CAAe;AACXT,QAAAA,eAAe,EAAG,KAAKH,KAAL,CAAWG,eADlB;AAEXC,QAAAA,WAAW,EAAG,KAAKJ,KAAL,CAAWI,WAFd;AAGXF,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAHP,OAAf;;AAKJ,UAAIS,SAAS,CAACT,KAAV,KAAoB,KAAKF,KAAL,CAAWE,KAAnC,EAA0C;AACtC,aAAKU,QAAL,CAAe;AACXT,UAAAA,eAAe,EAAG,KAAKH,KAAL,CAAWG,eADlB;AAEXC,UAAAA,WAAW,EAAG,KAAKJ,KAAL,CAAWI,WAFd;AAGXF,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE;AAHP,SAAf;AAKH;AACF;AACN;;AA3CmC;;AAiDpC,eAAeL,KAAf","sourcesContent":["import React from 'react';\nimport Plot from 'instal react-plotly.js';\n\n\nclass Chart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: this.props.title,\n            positiveXValues: [],\n            timeYValues: [],\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Plot\n                    data={[\n                        {\n                            x: this.state.positiveXValues,\n                            y: this.state.timeYValues,\n                            //type: 'scatter',\n                            //mode: 'lines+markers',\n                            marker: {color: 'red'},\n                        },\n                    ]}\n                    layout={{title: this.state.title + '  Chart'}}\n                />\n            </div>\n        )\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.timeYValues !== this.props.timeYValues) {\n            this.setState( {\n                positiveXValues : this.props.positiveXValues,\n                timeYValues : this.props.timeYValues,\n                title: this.props.title,\n            })\n        if (prevProps.title !== this.props.title) {\n            this.setState( {\n                positiveXValues : this.props.positiveXValues,\n                timeYValues : this.props.timeYValues,\n                title: this.props.title,\n            })\n        }\n      }\n}\n}\n\n\n\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}